name: yuda back CI CD
on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Get Code 
      uses: actions/checkout@v3

    - name: Login DockerHub
      run: echo "${{secrets.DOCKER_HUB_PASSWORD}}" | docker login -u "${{secrets.DOCKER_HUB_ID}}" --password-stdin 

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # - name: 'Az CLI login'
    #   uses: azure/login@v2
    #   with:
    #     # auth-type: IDENTITY
    #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
    #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
    #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Login to Azure using service principal
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: build dockers
      run: |
        docker build --platform=linux/amd64 \
          --build-arg POSTGRES_HOSTPORT="${{ secrets.POSTGRES_HOSTPORT }}" \
          --build-arg POSTGRES_HOST="${{ secrets.POSTGRES_HOST }}" \
          --build-arg POSTGRES_PORT="${{ secrets.POSTGRES_PORT }}" \
          --build-arg POSTGRES_USERNAME="${{ secrets.POSTGRES_USERNAME }}" \
          --build-arg POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}" \
          --build-arg POSTGRES_DATABASE="${{ secrets.POSTGRES_DATABASE }}" \
          --build-arg POSTGRES_SYNCHRONIZE="${{ secrets.POSTGRES_SYNCHRONIZE }}" \
          --build-arg JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" \
          --build-arg JWT_EXPIRES_ACCESS="${{ secrets.JWT_EXPIRES_ACCESS }}" \
          --build-arg BACK_DOMAIN="${{ secrets.BACK_DOMAIN }}" \
          --build-arg FRONT_URL="${{ secrets.FRONT_URL }}" \
          --build-arg COOKIE_SAMESITE="${{ secrets.COOKIE_SAMESITE }}" \
          --build-arg CUR_VERSION="${{ github.sha }}" \
          -t yusushin/docker-backend:latest  ./back

    - name: authorizate ACR and login to ACR
      run: | 
        az acr update -n fronttest --admin-enabled true
        az acr login --name fronttest

    - name: tag ACR name
      run: | 
        docker tag yusushin/docker-backend:latest fronttest.azurecr.io/yudaback:${{ github.sha }} 

    - name: push the dockers to ACR
      run: | 
        docker push fronttest.azurecr.io/yudaback:${{ github.sha }}  

    - name: Deploy to Azure back Web App
      id: deploy-back-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: yudabacktest
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_BACK }}
        images: 'fronttest.azurecr.io/yudaback:${{ github.sha }}'
